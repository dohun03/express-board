<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css"/>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <title>Node JS</title>
  <style>
  html { height: 100%; }
  body { height: 100%; margin: 0; padding: 0; }
  .__body__ { padding: 120px 340px 40px 340px; height:100%; background-color:#f0f0f0; overflow: auto; /* 내용이 넘칠 경우 스크롤바 표시 */ }
  
  /* 미디어 쿼리를 사용하여 화면 크기에 따라 스타일 변경 */
  @media (max-width: 768px) {
      .__body__ {
          padding: 80px 20px; /* 작은 화면에서 패딩 조정 */
      }
  }
  .navbar {
      position: fixed;
      top: 0;
      width: 100%;
      z-index: 1000;
  }
  .none {
      display:none;
  }
  .form-container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    width: 400px;
    text-align: center;
  }

  .file-input {
      padding: 5px;
      font-size: 14px; /* 글자 크기 조정 */
      border: 1px solid #ccc;
      border-radius: 4px;
      cursor: pointer;
      width: auto;
      display: inline-block;
  }

  .file-input:hover {
      border-color: #4CAF50; /* 마우스 오버 시 보더 색상 변경 */
  }

  .file-list {
    text-align: left;
    margin: 15px 0;
    padding-left: 0;
    list-style: none;
  }

  .file-list li {
    background-color: #eaeaea;
    padding: 5px;
    margin: 5px 0;
    border-radius: 4px;
  }

  .submit-btn {
    width: 100px;
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
  }

  .submit-btn:hover {
    background-color: #45a049;
  }
  /* 파일 목록 */
  .file-list li {
    background-color: #eaeaea;
    padding: 5px;
    margin: 5px 0;
    border-radius: 4px;
    position: relative; /* 삭제 버튼을 우측에 고정하려면 부모 요소에 상대 위치를 설정 */
  }

  /* 리스트 항목에 마우스 호버 시 삭제 아이콘 표시 */
  .file-list li:hover .delete-icon {
    display: inline-block; /* 호버 시 삭제 아이콘 보이게 함 */
  }

  /* 삭제 아이콘 기본 상태: 숨김 */
  .delete-icon {
    display: none;
    position: absolute;
    top: 50%;
    right: 10px; /* 우측 10px 간격으로 배치 */
    transform: translateY(-50%); /* 수직 중앙 정렬 */
    cursor: pointer;
    color: red;
    font-size: 16px;
  }
  </style>
</head>
<body>
  <div class="__header__"></div>
  <div class="__body__">
    <% if(data) { %>
    <input class="form-control subject" value="<%= data[0].subject %>" placeholder="제목을 입력하세요" maxlength="35" style="margin-bottom:10px;">
    <textarea class="form-control content" style="height:80%;"><%= data[0].content %></textarea>
    <% } else { %>
    <input class="form-control subject" placeholder="제목을 입력하세요" maxlength="35" style="margin-bottom:10px;">
    <textarea class="form-control content" style="height:80%;"></textarea>
    <% } %>
    <br>
    <button class="btn btn-sm btn-primary save" style="float: right;">게시글 저장</button>
    <div class="form-container">
      <form action="/uploads" method="post" enctype="multipart/form-data">
        <input type="file" name="userfile" id="userfile" multiple class="file-input">
        <!-- 선택된 파일 리스트 표시 -->
        <ul class="file-list">
        <% if(data && data[0].upload) { %>
          <% let uploads = data[0].upload %>
          <% uploads.forEach(item => { %>
            <li><span class="file-name"><%= item %></span><span class="delete-icon">✖</span></li>
          <% }) %>
        <% } %>
        </ul>
        <button type="submit" class="submit-btn none">업로드</button>
      </form>
    </div>
  </div>
</body>
<script>
  fetch("/header")
    .then(response => response.text())
    .then(data => document.querySelector(".__header__").innerHTML = data);
  
  $(document).ready(function() {
    const fileInput = $("#userfile");
    const fileList = $(".file-list");

    let selectedFiles = [];
    let addedFiles = [];
    let uploadedFiles;
    <% if(data) { %>
    uploadedFiles = '<%= data[0].upload || ''%>';
    uploadedFiles = uploadedFiles.split(',')
    <% } %>

    fileList.children("li").each( function() {
      addedFiles.push( $(this).children(".file-name").text() )
    });

    fileInput.on("change", function() {
      let form = $('form')[0]; // form 요소를 가져옵니다.
          let formData = new FormData(form); // FormData 객체를 생성하여 form 데이터를 넣습니다.
      const files = fileInput[0].files;
      if (files.length === 0) return;

      selectedFiles.push(files[0].name);
      addedFiles.push(files[0].name);

      const fileName = files[0].name;
      const listItem = $("<li>").text(fileName);
      const deleteIcon = $("<span>").addClass("delete-icon").html("&#10006;"); // X 아이콘 추가

      listItem.append(deleteIcon);
      fileList.append(listItem);
    });

    fileList.on("click", ".delete-icon", function() {
      const listItem = $(this).parent();
      const fileName = listItem.text().replace("✖", "").trim(); // 파일 이름 가져오기

      selectedFiles = selectedFiles.filter(file => file !== fileName);
      addedFiles = addedFiles.filter(file => file !== fileName);

      let deletedFiles = uploadedFiles.filter( (item) => !addedFiles.includes( item ));
      let deleteFile = $(this).closest('li').children('.file-name').text();
      console.log(deleteFile)
      // 기존 업로드 된 파일을 인자로 받아서 addFiles에 포함되는지 검사.
      // 만약 포함되면 false이기 때문에 return 안함.
      // 만약 업로드 인자가 저기에 없다? 바로 true 반환 => 결국 그 값(item)을 삭제 배열에 추가됨.
      if(confirm("정말 삭제하시겠습니까?")){
        $.ajax({
          url: '/uploads',
          method: 'DELETE',
          data: {
            id: '<%=id%>',
            file: deleteFile
          },
          success: function(response) {
            console.log('파일 삭제 성공:', response);
            listItem.remove();
          },
          error: function(xhr, status, error) {
            console.log('파일 삭제 오류:', error);
          }
        });
      }
    });

    $('.save').click(function(e) {
      e.preventDefault();

      let subject = $('.subject').val();
      let content = $('.content').val();
      let url, method;
      
      if ('<%=status%>' === 'update') {
        url = '/boards/<%=id%>';
        method = 'PUT';
      } else if ('<%=status%>' === 'create') {
        url = '/boards';
        method = 'POST';
      }
      
      $.ajax({
        url: url,
        method: method,
        data: { 
          user_id: '<%=user_id%>',
          subject: subject, 
          content: content
        },
        success: function(response) {
          let link;
          let form = $('form')[0]; // form 요소를 가져옵니다.
          let formData = new FormData(form); // FormData 객체를 생성하여 form 데이터를 넣습니다.
          formData.append('id', response.insertId || '<%=id%>');

          if (response.insertId)
            link = response.insertId
          else
            link = '<%=id%>'

          if(selectedFiles.length > 0){
            $.ajax({
              url: '/uploads',
              method: 'POST',
              data: formData, // FormData 객체를 요청 데이터로 보냅니다.
              processData: false, // jQuery에서 자동으로 데이터 처리를 하지 않도록 설정
              contentType: false, // multipart/form-data로 처리되도록 설정
              success: function(response) {
                console.log('파일 업로드 성공:', response);
                document.location.href = '/boards/'+link;
              },
              error: function(xhr, status, error) {
                console.log('파일 업로드 오류:', error);
              }
            });
          } else{
            document.location.href = '/boards/'+link;
          }
        },
        error: function(xhr, status, error) {
          console.log('error', error);
        }
      });
    });
  });
</script>
</html>